<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\Voice_B.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\Voice_B.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Fri Dec 04 10:57:30 2015
<BR><P>
<H3>Maximum Stack Usage =        748 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Sign433_SendTestFrame &rArr; Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[19c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[13d]">FaultData_Save</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14f]">WriteDataToEEPROM</a><BR>
 <LI><a href="#[14d]">ReadDataFromEEPROM</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d7]">Fault_Upload</a><BR>
 <LI><a href="#[e6]">PowerDownCountReset</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">PowerStatus_Get</a><BR>
 <LI><a href="#[160]">Updata_Channel</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[160]">Updata_Channel</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3e]">ActivateVoice</a> from powerstatus.o(.text) referenced 3 times from si4432.o(.text)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[109]">Capacity_Check</a> from capacity.o(.text) referenced 2 times from capacity.o(.text)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4b]">DataSend_Thread</a> from cmdprocess.o(.text) referenced from cmdprocess.o(.text)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[45]">Dormancy</a> from powerstatus.o(.text) referenced 2 times from voiceplayunit.o(.text)
 <LI><a href="#[52]">EEPROM_Write</a> from userdata.o(.text) referenced from userdatadownload.o(.text)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from si4432.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4e]">FaultMsg</a> from upload.o(.text) referenced from upload.o(.text)
 <LI><a href="#[97]">Get_433Channel_Attr</a> from flashattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[69]">Get_Cap_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[82]">Get_CmdAckNum_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[8b]">Get_CommonType_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[80]">Get_DeviceAddr_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7c]">Get_DeviceType_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[61]">Get_DormancyTime_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[9a]">Get_Eeprom_Info_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[9c]">Get_FaultFlag_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[70]">Get_Group_Attr</a> from scene&group.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[94]">Get_IAPPackCheck_Attr</a> from flashattr.o(.text) referenced 2 times from sysexeattr.o(.constdata)
 <LI><a href="#[8d]">Get_Link_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6b]">Get_ManyUnit_Attr</a> from unitshare_attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[68]">Get_Power_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[84]">Get_RepeatBandAddr_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[74]">Get_RepeatBroadcast_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6e]">Get_Scene_Attr</a> from scene&group.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[78]">Get_Sign433_StartRecFrame_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[76]">Get_Sign433_StartSendFrame_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7b]">Get_Sign433_TestState_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[65]">Get_Speakers_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[87]">Get_UnitAble_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[72]">Get_UnitArea_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[89]">Get_UnitType_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7f]">Get_UserID_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7d]">Get_Version_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[59]">Get_VoiceID_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5d]">Get_VoiceLead_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[67]">Get_VoicePlayState_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5b]">Get_VoiceSenstivity_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5f]">Get_WorkMode_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[98]">HardWDGTest_Attr</a> from wdg.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[44]">ImmediatelyDormancy</a> from powerstatus.o(.text) referenced 5 times from voiceplayunit.o(.text)
 <LI><a href="#[3b]">InstructLED_OFF</a> from instruct.o(.text) referenced from instruct.o(.text)
 <LI><a href="#[4c]">Instruct_Run</a> from instruct.o(.text) referenced 4 times from faultmanage.o(.text)
 <LI><a href="#[46]">KeyUnit_Init</a> from keyunit.o(.text) referenced from voicerecognition.o(.text)
 <LI><a href="#[3f]">Key_process</a> from keyunit.o(.text) referenced 3 times from si4432.o(.text)
 <LI><a href="#[41]">LED_Gradual</a> from pwm.o(.text) referenced from pwm.o(.text)
 <LI><a href="#[42]">LED_State2</a> from pwm.o(.text) referenced from pwm.o(.text)
 <LI><a href="#[43]">LED_State4</a> from pwm.o(.text) referenced from pwm.o(.text)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13b]">Msg_Change</a> from cmdprocess.o(.text) referenced from cmdprocess.o(.text)
 <LI><a href="#[4]">NMI_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[47]">PowerStatus_Get</a> from powerstatus.o(.text) referenced 2 times from voicerecognition.o(.text)
 <LI><a href="#[51]">Program_Write</a> from program.o(.text) referenced from userdatadownload.o(.text)
 <LI><a href="#[142]">PropChangeScanAndExe</a> from linkscanfifo.o(.text) referenced from linkscanfifo.o(.text)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3a]">Reset_Check</a> from devicereset.o(.text) referenced from devicereset.o(.text)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[99]">SI4432Test_Attr</a> from systestattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[198]">SI4432Test_Fail</a> from systestattr.o(.text) referenced from systestattr.o(.text)
 <LI><a href="#[40]">SI4432_SendEn</a> from si4432.o(.text) referenced from si4432.o(.text)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[96]">Set_433Channel_Attr</a> from flashattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[81]">Set_CmdAckNum_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[8a]">Set_CommonType_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[8e]">Set_DelLinkForUnit_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[60]">Set_DormancyTime_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[9b]">Set_FaultFlag_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6f]">Set_Group_Attr</a> from scene&group.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[95]">Set_IAPDataCRC_Attr</a> from flashattr.o(.text) referenced 2 times from sysexeattr.o(.constdata)
 <LI><a href="#[93]">Set_IAPPackSave_Attr</a> from flashattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[92]">Set_IAPReady_Attr</a> from flashattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[8c]">Set_Link_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6a]">Set_ManyUnit_Attr</a> from unitshare_attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[83]">Set_RepeatBandAddr_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[73]">Set_RepeatBroadcast_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6d]">Set_Scene_Attr</a> from scene&group.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[79]">Set_Sign433_RecFrameStream_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[77]">Set_Sign433_StartRecFrame_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[75]">Set_Sign433_StartSendFrame_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7a]">Set_Sign433_TestState_Attr</a> from sign433attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[64]">Set_Speakers_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[63]">Set_StopPlay_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[86]">Set_UnitAble_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[71]">Set_UnitArea_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[6c]">Set_UnitChecking_Attr</a> from unitshare_attr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[88]">Set_UnitType_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[85]">Set_UserDataFormat_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[7e]">Set_UserID_Attr</a> from sysexeattr.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[57]">Set_VoiceCmdAdd_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[58]">Set_VoiceCmdDel_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5c]">Set_VoiceLead_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[66]">Set_VoicePlayState_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[62]">Set_VoicePlay_Attr</a> from voiceplayattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5a]">Set_VoiceSenstivity_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[5e]">Set_WorkMode_Attr</a> from voiceexeattr.o(.text) referenced from voiceexeattr.o(.constdata)
 <LI><a href="#[3c]">Si4432_Init</a> from si4432.o(.text) referenced 2 times from si4432.o(.text)
 <LI><a href="#[4a]">Si4432_Send</a> from si4432.o(.text) referenced 2 times from cmdprocess.o(.text)
 <LI><a href="#[3d]">Si4432_Threshold</a> from si4432.o(.text) referenced 2 times from si4432.o(.text)
 <LI><a href="#[197]">Sign433_SendTestFrame</a> from sign433.o(.text) referenced from sign433.o(.text)
 <LI><a href="#[4d]">Sign433_SendTestReport</a> from sign433.o(.text) referenced from sign433attr.o(.text)
 <LI><a href="#[53]">SysAttr_Init</a> from sysexeattr.o(.text) referenced from unitcfg.o(.constdata)
 <LI><a href="#[c]">SysTick_Handler</a> from systick.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[38]">SystemInit</a> from system_stm32f10x.o(.text) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[50]">UART_Send</a> from usart.o(.text) referenced from systestattr.o(.text)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from usart.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[56]">UnitInstruct</a> from voiceplayunit.o(.text) referenced from unitcfg.o(.constdata)
 <LI><a href="#[4f]">Upload_Attr</a> from upload.o(.text) referenced from upload.o(.text)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8f]">UserDataDownload_Ready</a> from userdatadownload.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[91]">UserDataFrame_Check</a> from userdatadownload.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[90]">UserDataFrame_Save</a> from userdatadownload.o(.text) referenced from sysexeattr.o(.constdata)
 <LI><a href="#[148]">UserData_Init</a> from userdata.o(.text) referenced 2 times from userdata.o(.text)
 <LI><a href="#[55]">VoiceEepromInit</a> from voiceexeattr.o(.text) referenced from unitcfg.o(.constdata)
 <LI><a href="#[54]">VoiceParaInit</a> from voiceexeattr.o(.text) referenced from unitcfg.o(.constdata)
 <LI><a href="#[49]">VoicePlay</a> from voiceplayunit.o(.text) referenced from voicerecognition.o(.text)
 <LI><a href="#[12c]">Voice_CmdUpdata</a> from voicerecognition.o(.text) referenced 2 times from voicerecognition.o(.text)
 <LI><a href="#[12f]">Voice_Disable</a> from voicerecognition.o(.text) referenced from voicerecognition.o(.text)
 <LI><a href="#[48]">Voice_IDProcess</a> from voicerecognition.o(.text) referenced from voicerecognition.o(.text)
 <LI><a href="#[116]">Voice_Reset</a> from voicerecognition.o(.text) referenced from voicerecognition.o(.text)
 <LI><a href="#[f2]">WDG_Feed</a> from wdg.o(.text) referenced 2 times from wdg.o(.text)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9d]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_md.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[9e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1a6]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1a7]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1a8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[a5]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1a9]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1aa]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1ab]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1ac]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1ad]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1ae]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1af]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[1b0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1b1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1b2]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1b3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1b4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1b5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1b6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1b7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1b8]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1b9]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1ba]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1bb]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1bc]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1bd]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1be]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1bf]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[1c0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1c1]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[1c2]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[1c3]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[9f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1c4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a2]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1c5]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a6]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Unit_Init &rArr; UnitPublicEEPROMData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1c6]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[19d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a9]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1c7]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ab]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[38]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[1c8]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b2]"></a>DeviceResetCheck_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, devicereset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DeviceResetCheck_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Check
</UL>

<P><STRONG><a name="[bb]"></a>Flash_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteOptionByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseOptionByte
</UL>

<P><STRONG><a name="[cd]"></a>Flash_lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
</UL>

<P><STRONG><a name="[b5]"></a>FLASH_ErasePage</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Status
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EOP
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
</UL>

<P><STRONG><a name="[b8]"></a>Flash_ProgramHalfWord</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Status
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EOP
</UL>

<P><STRONG><a name="[b9]"></a>Flash_Write</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Status
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EOP
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
</UL>

<P><STRONG><a name="[ba]"></a>Flash_EraseOptionByte</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Status
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EOP
</UL>

<P><STRONG><a name="[bc]"></a>Flash_WriteOptionByte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Status
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EOP
</UL>

<P><STRONG><a name="[b3]"></a>GPIOx_Cfg</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceRecognition_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardWDGTest_Attr
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_PortInit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceResetCheck_Init
</UL>

<P><STRONG><a name="[b4]"></a>GPIOx_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceRecognition_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_PortInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InstructLED_OFF
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ACK
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceResetCheck_Init
</UL>

<P><STRONG><a name="[c0]"></a>GPIOx_Rst</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceRecognition_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dormancy
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct_Run
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ACK
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>

<P><STRONG><a name="[f3]"></a>GPIOx_Rvrs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Feed
</UL>

<P><STRONG><a name="[af]"></a>GPIOx_Get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_ValueGet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_433M_Busy
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Check
</UL>

<P><STRONG><a name="[bd]"></a>I2C_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysHard_Init
</UL>

<P><STRONG><a name="[c6]"></a>IIC_GetState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIC_GetState &rArr; I2C_SendB_Ack &rArr; I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>

<P><STRONG><a name="[c7]"></a>IIC_Read</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_Read &rArr; I2C_SendB_Ack &rArr; I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>

<P><STRONG><a name="[c8]"></a>IIC_Write</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_Write &rArr; I2C_SendB_Ack &rArr; I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>

<P><STRONG><a name="[c9]"></a>IIC_WriteSame</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_WriteSame &rArr; I2C_SendB_Ack &rArr; I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
</UL>

<P><STRONG><a name="[4c]"></a>Instruct_Run</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, instruct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Instruct_Run &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Address Reference Count : 3]<UL><LI> instruct.o(.text)
<LI> faultmanage.o(.text)
<LI> unitshare_attr.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>Instruct_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, instruct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Instruct_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>Instruct</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, instruct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Instruct &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>

<P><STRONG><a name="[cc]"></a>Program_Erase</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, program.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Program_Erase &rArr; FLASH_ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_lock
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Flag
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Ready
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Ready
</UL>

<P><STRONG><a name="[51]"></a>Program_Write</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, program.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Program_Write &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_lock
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Flag
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_PackProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> userdatadownload.o(.text)
</UL>
<P><STRONG><a name="[162]"></a>Program_Read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, program.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
</UL>

<P><STRONG><a name="[161]"></a>Flash_DefaultValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, program.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Channel_Get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
</UL>

<P><STRONG><a name="[145]"></a>SetRecTestStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, si4432.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_RecFrameStream_Attr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_StartRecFrame_Attr
</UL>

<P><STRONG><a name="[146]"></a>GetRSSIPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, si4432.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sign433_SendTestReport
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_StartRecFrame_Attr
</UL>

<P><STRONG><a name="[1c9]"></a>Si4432_GetRSSI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si4432.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>Si4432_Idle</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Si4432_Idle &rArr; delay_ms &rArr; WDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432Test_Attr
</UL>

<P><STRONG><a name="[3c]"></a>Si4432_Init</STRONG> (Thumb, 734 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Si4432_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ex_NVIC_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Channel_Get
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Idle
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_RX
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_SendEn
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_PortInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysHard_Init
</UL>
<BR>[Address Reference Count : 2]<UL><LI> si4432.o(.text)
<LI> flashattr.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>ReportUpReady</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ReportUpReady &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[e1]"></a>ReportUpdating</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReportUpdating &rArr; Voice_StopVoice &rArr; delay_ms &rArr; WDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[e3]"></a>ReportUpdataOK</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReportUpdataOK &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EXTI15_10_IRQHandler &rArr; RecDataToFifo &rArr; ReportUpReady &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>Si4432_Send</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Si4432_Send &rArr; SI4432_Send_All_Data &rArr; Si4432_Fault &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_433M_Busy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cmdprocess.o(.text)
<LI> systestattr.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>

<P><STRONG><a name="[d1]"></a>SPI2_Init</STRONG> (Thumb, 166 bytes, Stack size 4 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI2_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_PortInit
</UL>

<P><STRONG><a name="[d2]"></a>SPI2_SetSpeed</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_PortInit
</UL>

<P><STRONG><a name="[1ca]"></a>MY_NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[db]"></a>MY_NVIC_Init</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
</UL>

<P><STRONG><a name="[da]"></a>Ex_NVIC_Config</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ex_NVIC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
</UL>

<P><STRONG><a name="[ee]"></a>SysHard_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, syshard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SysHard_Init &rArr; Si4432_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>HardID_Check</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, syshard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
</UL>

<P><STRONG><a name="[ef]"></a>SysTick_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysHard_Init
</UL>

<P><STRONG><a name="[d8]"></a>Time_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_433M_Busy
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Threshold
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_RunCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f1]"></a>Test_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Test_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>WDG_Feed</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wdg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rvrs
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPPackSave_Attr
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IAPPackCheck_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wdg.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>WDG_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wdg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WDG_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>WDG_FeedOFF</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, wdg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WDG_FeedOFF &rArr; Thread_Logout &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPDataCRC_Attr
</UL>

<P><STRONG><a name="[98]"></a>HardWDGTest_Attr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wdg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HardWDGTest_Attr &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; Unit_Init &rArr; UnitPublicEEPROMData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unit_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Process
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FIFOData
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFOInit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysHard_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceResetCheck_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[135]"></a>UnitCnt_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, unitcfg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitChecking_Attr
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPrivateEEPROMData_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Scene_Attr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ManyUnit_Attr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Group_Attr
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_UnitAble_Attr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitAble_Attr
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonType_Attr
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CommonType_Attr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_UnitType_Attr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitType_Attr
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_UnitArea_Attr
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitArea_Attr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
</UL>

<P><STRONG><a name="[f8]"></a>Unit_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, unitcfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Unit_Init &rArr; UnitPublicEEPROMData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
</UL>

<P><STRONG><a name="[fc]"></a>Key_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Key_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyUnit_Init
</UL>

<P><STRONG><a name="[fd]"></a>Key_ValueGet</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Key_ValueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[1cb]"></a>Key_StatusChange</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, key.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>Key_Scan</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Key_Scan &rArr; Key_ValueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_ValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_process
</UL>

<P><STRONG><a name="[e0]"></a>Lark7318_FrameInfo</STRONG> (Thumb, 132 bytes, Stack size 120 bytes, lark7318.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_put
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_StopPlay_Attr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoicePlay_Attr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSperkers
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlayState
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveFailed
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitInstruct
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivateVoice
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpReady
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode_Attr
</UL>

<P><STRONG><a name="[101]"></a>PowerUP_Play</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, lark7318.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[102]"></a>ReceiveFailed</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lark7318.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ReceiveFailed &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPostBack
</UL>

<P><STRONG><a name="[103]"></a>AutoPostBack</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, lark7318.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = AutoPostBack &rArr; Voice_Reset_Cmd &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[105]"></a>UART_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voiceUnit_Init
</UL>

<P><STRONG><a name="[106]"></a>UART_Write</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>

<P><STRONG><a name="[50]"></a>UART_Send</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Run
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImmediatelyDormancy
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUP_Play
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdataOK
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdating
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systestattr.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = USART2_IRQHandler &rArr; Identification &rArr; Voice_Reset &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Identification
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPostBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[108]"></a>ADC_Init</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Init
</UL>

<P><STRONG><a name="[10a]"></a>ADC_Get</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
</UL>

<P><STRONG><a name="[109]"></a>Capacity_Check</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, capacity.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Capacity_Check &rArr; Thread_Logout &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RatioSet
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> capacity.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>Capacity_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, capacity.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Capacity_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
</UL>

<P><STRONG><a name="[110]"></a>PowerStatus_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PowerStatus_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
</UL>

<P><STRONG><a name="[45]"></a>Dormancy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dormancy
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
</UL>
<BR>[Address Reference Count : 2]<UL><LI> powerstatus.o(.text)
<LI> voiceplayunit.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>ImmediatelyDormancy</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ImmediatelyDormancy &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 4]<UL><LI> powerstatus.o(.text)
<LI> voicerecognition.o(.text)
<LI> voiceplayunit.o(.text)
<LI> voiceexeattr.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>ActivateVoice</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ActivateVoice &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Address Reference Count : 2]<UL><LI> si4432.o(.text)
<LI> powerstatus.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>PowerDownCountReset</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = PowerDownCountReset &rArr;  PowerStatus_Get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_process
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[47]"></a>PowerStatus_Get</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, powerstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PowerStatus_Get &rArr; PowerDownCountReset &rArr;  PowerStatus_Get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>
<BR>[Address Reference Count : 2]<UL><LI> powerstatus.o(.text)
<LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>PWM_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>

<P><STRONG><a name="[114]"></a>LED_State</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Hang
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>

<P><STRONG><a name="[10e]"></a>LED_RatioSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
</UL>

<P><STRONG><a name="[3f]"></a>Key_process</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, keyunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Key_process &rArr; Voice_Reset &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
</UL>
<BR>[Address Reference Count : 3]<UL><LI> si4432.o(.text)
<LI> keyunit.o(.text)
<LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>KeyUnit_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, keyunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = KeyUnit_Init &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>voiceUnit_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, voiceplayunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = voiceUnit_Init &rArr; UART_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_Init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_Init
</UL>

<P><STRONG><a name="[56]"></a>UnitInstruct</STRONG> (Thumb, 30 bytes, Stack size 48 bytes, voiceplayunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = UnitInstruct &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unitcfg.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>FIFO_get</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, voiceplayunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FIFO_get &rArr; fifo_gets &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_validSize
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_find
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_empty
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_cmp
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkCrcValue
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
</UL>

<P><STRONG><a name="[49]"></a>VoicePlay</STRONG> (Thumb, 116 bytes, Stack size 112 bytes, voiceplayunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = VoicePlay &rArr; PowerDownCountReset &rArr;  PowerStatus_Get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Run
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>Voice_Reset</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Voice_Reset &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Identification
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>VoiceSet</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = VoiceSet &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSperkers
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlayState
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyUnit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
</UL>

<P><STRONG><a name="[ea]"></a>Voice_SetSave</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Voice_SetSave &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Speakers_Attr
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DormancyTime_Attr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode_Attr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceSenstivity_Attr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoicePlayState_Attr
</UL>

<P><STRONG><a name="[128]"></a>Voice_SetInit</STRONG> (Thumb, 74 bytes, Stack size 240 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = Voice_SetInit &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSperkers
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlayState
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceEepromInit
</UL>

<P><STRONG><a name="[129]"></a>Voice_Init</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = Voice_Init &rArr; Voice_SetInit &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceParaInit
</UL>

<P><STRONG><a name="[12a]"></a>VoiceRecognition_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VoiceRecognition_Init &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_Init
</UL>

<P><STRONG><a name="[e2]"></a>Voice_StopVoice</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Voice_StopVoice &rArr; delay_ms &rArr; WDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImmediatelyDormancy
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdating
</UL>

<P><STRONG><a name="[12b]"></a>Voice_DataEarse</STRONG> (Thumb, 82 bytes, Stack size 248 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = Voice_DataEarse &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdDel
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
</UL>

<P><STRONG><a name="[12c]"></a>Voice_CmdUpdata</STRONG> (Thumb, 442 bytes, Stack size 280 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = Voice_CmdUpdata &rArr; Voice_DataEarse &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_DataEarse
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Hang
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>Voice_CmdAdd</STRONG> (Thumb, 138 bytes, Stack size 248 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = Voice_CmdAdd &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceLead_Attr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceCmdAdd_Attr
</UL>

<P><STRONG><a name="[12e]"></a>Voice_CmdDel</STRONG> (Thumb, 220 bytes, Stack size 248 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = Voice_CmdDel &rArr; Voice_DataEarse &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_DataEarse
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceCmdDel_Attr
</UL>

<P><STRONG><a name="[121]"></a>Voice_Run</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Voice_Run &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Identification
</UL>

<P><STRONG><a name="[104]"></a>Voice_Reset_Cmd</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = Voice_Reset_Cmd &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Speakers_Attr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPostBack
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DormancyTime_Attr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceSenstivity_Attr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoicePlayState_Attr
</UL>

<P><STRONG><a name="[107]"></a>Identification</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Identification &rArr; Voice_Reset &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Run
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[12f]"></a>Voice_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voicerecognition.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[130]"></a>Voice_Enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, voicerecognition.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>

<P><STRONG><a name="[131]"></a>voice_play_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = voice_play_Init &rArr; voiceUnit_Init &rArr; UART_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceRecognition_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voiceUnit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceParaInit
</UL>

<P><STRONG><a name="[62]"></a>Set_VoicePlay_Attr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Set_VoicePlay_Attr &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>Set_StopPlay_Attr</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = Set_StopPlay_Attr &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_Init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>VoiceSperkers</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = VoiceSperkers &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Speakers_Attr
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
</UL>

<P><STRONG><a name="[64]"></a>Set_Speakers_Attr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Set_Speakers_Attr &rArr; VoiceSperkers &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSperkers
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>Get_Speakers_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, voiceplayattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>VoicePlayState</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoicePlayState_Attr
</UL>

<P><STRONG><a name="[66]"></a>Set_VoicePlayState_Attr</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, voiceplayattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Set_VoicePlayState_Attr &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlayState
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>Get_VoicePlayState_Attr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, voiceplayattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>VoiceParaInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = VoiceParaInit &rArr; Voice_Init &rArr; Voice_SetInit &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unitcfg.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>VoiceEepromInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = VoiceEepromInit &rArr; Voice_SetInit &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unitcfg.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>Set_VoiceCmdAdd_Attr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = Set_VoiceCmdAdd_Attr &rArr; Voice_CmdAdd &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>Set_VoiceCmdDel_Attr</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = Set_VoiceCmdDel_Attr &rArr; Voice_CmdDel &rArr; Voice_DataEarse &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>Get_VoiceID_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>Set_VoiceSenstivity_Attr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Set_VoiceSenstivity_Attr &rArr; Voice_Reset_Cmd &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>Get_VoiceSenstivity_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>Set_VoiceLead_Attr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = Set_VoiceLead_Attr &rArr; Voice_CmdAdd &rArr; EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>Get_VoiceLead_Attr</STRONG> (Thumb, 58 bytes, Stack size 248 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = Get_VoiceLead_Attr &rArr; EEPROM_Read &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>Set_WorkMode_Attr</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Set_WorkMode_Attr &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>Get_WorkMode_Attr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>Set_DormancyTime_Attr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, voiceexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Set_DormancyTime_Attr &rArr; Voice_Reset_Cmd &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>Get_DormancyTime_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>Get_Power_Attr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>Get_Cap_Attr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, voiceexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> voiceexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>memcpy</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bestfulib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Hang
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Package
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteALink
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadALink
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelALink
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Upload
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ManyUnit_Attr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ManyUnit_Attr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkForUnit
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[19a]"></a>memcmp</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, bestfulib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkALinkIsExist
</UL>

<P><STRONG><a name="[147]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bestfulib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelALink
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkClr
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Ready
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAllLinkFromTable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_StartRecFrame_Attr
</UL>

<P><STRONG><a name="[136]"></a>memmove</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bestfulib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Hang
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Scene_Attr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
</UL>

<P><STRONG><a name="[1cc]"></a>memfind</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, bestfulib.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>memcharget</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bestfulib.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>Process_FIFOData</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Process_FIFOData &rArr; cmd_get &rArr; fifo_gets &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataSend_Thread
</UL>

<P><STRONG><a name="[134]"></a>Msg_Execute</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Msg_Execute &rArr; Upload &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ManyUnit_Attr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ManyUnit_Attr
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>

<P><STRONG><a name="[13b]"></a>Msg_Change</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Msg_Change &rArr; Msg_Process &rArr; Object_Check &rArr; GroupEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdprocess.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>FIFOInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FIFOInit &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>ProcessSend_Fun</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmdprocess.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432Test_Fail
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432Test_Attr
</UL>

<P><STRONG><a name="[132]"></a>cmd_get</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = cmd_get &rArr; fifo_gets &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_validSize
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_find
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_empty
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_cmp
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkCrcValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FIFOData
</UL>

<P><STRONG><a name="[ff]"></a>cmd_put</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkCrcValue
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Feedback
</UL>

<P><STRONG><a name="[11f]"></a>ChkCrcValue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChkCrcValue
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_put
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Calibrate
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[1ce]"></a>ChkCrcValueEx</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, crc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
</UL>

<P><STRONG><a name="[d5]"></a>delay_ms</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms &rArr; WDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Feed
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_StopVoice
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Idle
</UL>

<P><STRONG><a name="[d7]"></a>Fault_Upload</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, faultmanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_FeedOFF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Fault
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Fault
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Feedback
</UL>

<P><STRONG><a name="[118]"></a>fifo_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_StopPlay_Attr
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voiceUnit_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFOInit
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropFifoInit
</UL>

<P><STRONG><a name="[1cf]"></a>fifo_Rst</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fifo.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>fifo_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_getc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[11c]"></a>fifo_validSize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[e8]"></a>fifo_puts</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_surplusSize
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropEventFifo
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_put
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[11e]"></a>fifo_gets</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fifo_gets &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_validSize
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_empty
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropChangeScanAndExe
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[e9]"></a>fifo_putc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fifo_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_full
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_put
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[140]"></a>fifo_getc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_empty
</UL>

<P><STRONG><a name="[11b]"></a>fifo_find</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fifo_find
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[11d]"></a>fifo_cmp</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fifo_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_get
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_get
</UL>

<P><STRONG><a name="[141]"></a>PropFifoInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, linkscanfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PropFifoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropChangeScanAndExe
</UL>

<P><STRONG><a name="[142]"></a>PropChangeScanAndExe</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, linkscanfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = PropChangeScanAndExe &rArr; LinkSrcExe &rArr; Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_gets
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkSrcExe
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropFifoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> linkscanfifo.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>PropEventFifo</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, linkscanfifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PropEventFifo &rArr; Upload &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
</UL>

<P><STRONG><a name="[75]"></a>Set_Sign433_StartSendFrame_Attr</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sign433attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Sign433_StartSendFrame_Attr &rArr; Sign433_SendTestFrameStream &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sign433_SendTestFrameStream
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>Get_Sign433_MasterAddr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sign433attr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
</UL>

<P><STRONG><a name="[76]"></a>Get_Sign433_StartSendFrame_Attr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sign433attr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>Set_Sign433_StartRecFrame_Attr</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sign433attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_Sign433_StartRecFrame_Attr &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRSSIPara
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecTestStatus
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>Get_Sign433_StartRecFrame_Attr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sign433attr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>Set_Sign433_RecFrameStream_Attr</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sign433attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Set_Sign433_RecFrameStream_Attr &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecTestStatus
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>Set_Sign433_TestState_Attr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sign433attr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>Get_Sign433_TestState_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sign433attr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>SysAttr_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = SysAttr_Init &rArr; UserData_Init &rArr; UserEEPROMData_Init &rArr; GroupEEPROM_Init &rArr; GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkInit
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropFifoInit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Fault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unitcfg.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>Get_Version_Attr</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_Version_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>Get_DeviceType_Attr</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_DeviceType_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>Set_UserID_Attr</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Set_UserID_Attr &rArr; SysEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>Get_UserID_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sysexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>Get_DeviceAddr_Attr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sysexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>Set_CmdAckNum_Attr</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Set_CmdAckNum_Attr &rArr; SysEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>Get_CmdAckNum_Attr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>Set_RepeatBandAddr_Attr</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_RepeatBandAddr_Attr &rArr; SysEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>Get_RepeatBandAddr_Attr</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_RepeatBandAddr_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>Set_RepeatBroadcast_Attr</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Set_RepeatBroadcast_Attr &rArr; SysEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>Get_RepeatBroadcast_Attr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysexeattr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>Set_UnitArea_Attr</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_UnitArea_Attr &rArr; UnitPublicEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>Get_UnitArea_Attr</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_UnitArea_Attr
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>Set_UnitType_Attr</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_UnitType_Attr &rArr; UnitPublicEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>Get_UnitType_Attr</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_UnitType_Attr
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>Set_CommonType_Attr</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_CommonType_Attr &rArr; UnitPublicEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>Get_CommonType_Attr</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_CommonType_Attr
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>Set_UnitAble_Attr</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_UnitAble_Attr &rArr; UnitPublicEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>Get_UnitAble_Attr</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_UnitAble_Attr
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>Get_Eeprom_Info_Attr</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Get_Eeprom_Info_Attr &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>Set_FaultFlag_Attr</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Set_FaultFlag_Attr &rArr; FaultData_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>Get_FaultFlag_Attr</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Get_FaultFlag_Attr &rArr; FaultData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>Set_UserDataFormat_Attr</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = Set_UserDataFormat_Attr &rArr; SceneEEPROMUnit_Init &rArr; SceneEEPROMData_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMUnitData_Init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPrivateEEPROMUnitData_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMUnit_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkForUnit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>Set_Link_Attr</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = Set_Link_Attr &rArr; WriteLinkItem &rArr; WriteLinkToTable &rArr; WriteALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkItem
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyLinkItem
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>Get_Link_Attr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Link_Attr &rArr; ReadLinkItem &rArr; ReadLinkFromTable &rArr; ReadALink &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLinkItem
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLinkItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>Set_DelLinkForUnit_Attr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sysexeattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Set_DelLinkForUnit_Attr &rArr; DelLinkForUnit &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkForUnit
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAllLinkFromTable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>Thread_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>Thread_Wake</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_State4
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>

<P><STRONG><a name="[b0]"></a>Thread_Login</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropEventFifo
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Enable
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdDel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdAdd
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyUnit_Init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_State
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImmediatelyDormancy
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFOInit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Send
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_433M_Busy
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct_Run
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitChecking_Attr
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceResetCheck_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Check
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_433Channel_Attr
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432Test_Attr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sign433_SendTestFrameStream
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_RecFrameStream_Attr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Fault
</UL>

<P><STRONG><a name="[e7]"></a>Thread_Logout</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Thread_Logout &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_State
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Process
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_FeedOFF
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode_Attr
</UL>

<P><STRONG><a name="[115]"></a>Thread_Hang</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Thread_Hang &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_State
</UL>

<P><STRONG><a name="[fa]"></a>Thread_Process</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Thread_Process &rArr; Thread_Logout &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>Thread_RunCheck</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6a]"></a>Set_ManyUnit_Attr</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, unitshare_attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Set_ManyUnit_Attr &rArr; Msg_Execute &rArr; Upload &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>Get_ManyUnit_Attr</STRONG> (Thumb, 310 bytes, Stack size 288 bytes, unitshare_attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Get_ManyUnit_Attr &rArr; Msg_Execute &rArr; Upload &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>Set_UnitChecking_Attr</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, unitshare_attr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_UnitChecking_Attr &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[17a]"></a>Updata_Check</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, updata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPReady_Attr
</UL>

<P><STRONG><a name="[15d]"></a>Updata_Ready</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Updata_Ready &rArr; Program_Erase &rArr; FLASH_ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPReady_Attr
</UL>

<P><STRONG><a name="[15e]"></a>Updata_PackProcess</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Updata_PackProcess &rArr; Program_Write &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPPackSave_Attr
</UL>

<P><STRONG><a name="[17b]"></a>Updata_PackCheck</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Updata_PackCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IAPPackCheck_Attr
</UL>

<P><STRONG><a name="[15f]"></a>Updata_Calibrate</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Updata_Calibrate &rArr; ChkCrcValue
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkCrcValue
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPDataCRC_Attr
</UL>

<P><STRONG><a name="[160]"></a>Updata_Channel</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = Updata_Channel &rArr;  Updata_Channel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_DefaultValue
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Read
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Flag
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_433Channel_Attr
</UL>

<P><STRONG><a name="[d9]"></a>Channel_Get</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Channel_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_DefaultValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Flag
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_433Channel_Attr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_433Channel_Attr
</UL>

<P><STRONG><a name="[163]"></a>Updata_Flag</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Updata_Flag &rArr; Updata_Channel &rArr;  Updata_Channel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Channel_Get
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IAPDataCRC_Attr
</UL>

<P><STRONG><a name="[13c]"></a>Upload_Fault</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, upload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Upload_Fault &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432Test_Fail
</UL>

<P><STRONG><a name="[127]"></a>Upload</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, upload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Upload &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Get
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropEventFifo
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
</UL>

<P><STRONG><a name="[168]"></a>SceneEEPROM_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SceneEEPROM_Init &rArr; SceneEEPROMData_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
</UL>

<P><STRONG><a name="[153]"></a>GroupEEPROMUnit_Init</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[16a]"></a>GroupEEPROM_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = GroupEEPROM_Init &rArr; GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
</UL>

<P><STRONG><a name="[152]"></a>UnitPrivateEEPROMUnitData_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UnitPrivateEEPROMUnitData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPrivateEEPROMData_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[16b]"></a>UnitPrivateEEPROMData_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UnitPrivateEEPROMData_Init &rArr; UnitPrivateEEPROMUnitData_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPrivateEEPROMUnitData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
</UL>

<P><STRONG><a name="[151]"></a>UnitPublicEEPROMUnitData_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = UnitPublicEEPROMUnitData_Init &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[16c]"></a>UnitPublicEEPROMData_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = UnitPublicEEPROMData_Init &rArr; UnitPublicEEPROMUnitData_Init &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMUnitData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
</UL>

<P><STRONG><a name="[16d]"></a>SysEEPROMData_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SysEEPROMData_Init &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardID_Check
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
</UL>

<P><STRONG><a name="[b1]"></a>UserEEPROMData_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = UserEEPROMData_Init &rArr; GroupEEPROM_Init &rArr; GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPrivateEEPROMData_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_433Channel_Attr
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAllLinkFromTable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Fault
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Check
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[14e]"></a>FaultData_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = FaultData_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FaultFlag_Attr
</UL>

<P><STRONG><a name="[148]"></a>UserData_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = UserData_Init &rArr; UserEEPROMData_Init &rArr; GroupEEPROM_Init &rArr; GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unit_Init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardID_Check
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> userdata.o(.text)
</UL>
<P><STRONG><a name="[13d]"></a>FaultData_Save</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + In Cycle
<LI>Call Chain = FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
</UL>

<P><STRONG><a name="[150]"></a>FaultData_Get</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FaultData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FaultFlag_Attr
</UL>

<P><STRONG><a name="[14b]"></a>SysEEPROMData_Set</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SysEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSerialNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RepeatBroadcast_Attr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RepeatBandAddr_Attr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CmdAckNum_Attr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserID_Attr
</UL>

<P><STRONG><a name="[fb]"></a>UnitPublicEEPROMData_Get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UnitPublicEEPROMData_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unit_Init
</UL>

<P><STRONG><a name="[14c]"></a>UnitPublicEEPROMData_Set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = UnitPublicEEPROMData_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitAble_Attr
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CommonType_Attr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitType_Attr
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitArea_Attr
</UL>

<P><STRONG><a name="[16f]"></a>GroupEEPROM_Clr</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = GroupEEPROM_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
</UL>

<P><STRONG><a name="[170]"></a>GroupEEPROM_Set</STRONG> (Thumb, 232 bytes, Stack size 72 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = GroupEEPROM_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
</UL>

<P><STRONG><a name="[171]"></a>GroupEEPROM_Get</STRONG> (Thumb, 114 bytes, Stack size 72 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = GroupEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Group_Attr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[154]"></a>SceneEEPROMUnit_Init</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = SceneEEPROMUnit_Init &rArr; SceneEEPROMData_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Clr
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[173]"></a>SceneEEPROM_Clr</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = SceneEEPROM_Clr &rArr; SceneEEPROMData_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Clr
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
</UL>

<P><STRONG><a name="[177]"></a>SceneEEPROM_Set</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = SceneEEPROM_Set &rArr; SceneEEPROMData_Seat &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Seat
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMSave_Seat
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Save
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMSave_Addr
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Clr
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
</UL>

<P><STRONG><a name="[179]"></a>SceneEEPROM_Get</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SceneEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMSave_Addr
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Scene_Attr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[52]"></a>EEPROM_Write</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = EEPROM_Write &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdDel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdAdd
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_DataEarse
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> userdatadownload.o(.text)
</UL>
<P><STRONG><a name="[123]"></a>EEPROM_Read</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EEPROM_Read &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdDel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdAdd
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_DataEarse
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_IDProcess
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VoiceLead_Attr
</UL>

<P><STRONG><a name="[14d]"></a>ReadDataFromEEPROM</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + In Cycle
<LI>Call Chain = ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkInit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Get
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Clr
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Seat
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Clr
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserData_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMUnit_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Eeprom_Info_Attr
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Save
</UL>

<P><STRONG><a name="[14f]"></a>WriteDataToEEPROM</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteALink
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelALink
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkClr
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Seat
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Save
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Clr
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMUnitData_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitPublicEEPROMData_Set
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkForUnit
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAllLinkFromTable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FaultFlag_Attr
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Save
</UL>

<P><STRONG><a name="[167]"></a>WriteDataToEEPROMEx</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Clr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMUnit_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultData_Init
</UL>

<P><STRONG><a name="[92]"></a>Set_IAPReady_Attr</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Set_IAPReady_Attr &rArr; Updata_Ready &rArr; Program_Erase &rArr; FLASH_ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Ready
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>Set_IAPPackSave_Attr</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Set_IAPPackSave_Attr &rArr; Updata_PackProcess &rArr; Program_Write &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Feed
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_PackProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>Get_IAPPackCheck_Attr</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_IAPPackCheck_Attr &rArr; Updata_PackCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Feed
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_PackCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>Set_IAPDataCRC_Attr</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Set_IAPDataCRC_Attr &rArr; Updata_Flag &rArr; Updata_Channel &rArr;  Updata_Channel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_FeedOFF
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Flag
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Calibrate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>Set_433Channel_Attr</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Set_433Channel_Attr &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Channel_Get
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>Get_433Channel_Attr</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, flashattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_433Channel_Attr &rArr; Channel_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Channel_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>LinkInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, linksrc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = LinkInit &rArr; ALinkInit &rArr; ALinkClr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
</UL>

<P><STRONG><a name="[17d]"></a>LinkClr</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, linksrc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkClr
</UL>

<P><STRONG><a name="[17f]"></a>CmpSampAndLinkValue</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, linksrc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmpSampAndLinkValue
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkSrcExe
</UL>

<P><STRONG><a name="[1d0]"></a>GetConditionReverse</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, linksrc.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>GetConditionOffset</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, linksrc.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>LinkSrcExe</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, linksrc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = LinkSrcExe &rArr; Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Send
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpSampAndLinkValue
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropChangeScanAndExe
</UL>

<P><STRONG><a name="[181]"></a>CheckLinkFull</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckLinkFull
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckALinkFull
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkItem
</UL>

<P><STRONG><a name="[183]"></a>QueryLink</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QueryLink
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryALink
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLinkItem
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLinkItem
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyLinkItem
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkItem
</UL>

<P><STRONG><a name="[18f]"></a>QueryAllLinkFromTable</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = QueryAllLinkFromTable
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLinkItem
</UL>

<P><STRONG><a name="[185]"></a>ReadLinkFromTable</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ReadLinkFromTable &rArr; ReadALink &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadALink
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLinkItem
</UL>

<P><STRONG><a name="[187]"></a>WriteLinkToTable</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = WriteLinkToTable &rArr; WriteALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteALink
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkItem
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyLinkItem
</UL>

<P><STRONG><a name="[15b]"></a>DelAllLinkFromTable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DelAllLinkFromTable &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkItem
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DelLinkForUnit_Attr
</UL>

<P><STRONG><a name="[189]"></a>DelLinkFromTable</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = DelLinkFromTable &rArr; DelALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelALink
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkItem
</UL>

<P><STRONG><a name="[18b]"></a>ChkLinkIsExist</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ChkLinkIsExist &rArr; ChkALinkIsExist &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkALinkIsExist
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkItem
</UL>

<P><STRONG><a name="[18d]"></a>GetLinkNum</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetLinkNum &rArr; GetALinkNum
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetALinkNum
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkItem
</UL>

<P><STRONG><a name="[156]"></a>WriteLinkItem</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = WriteLinkItem &rArr; WriteLinkToTable &rArr; WriteALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkNum
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkLinkIsExist
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkToTable
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkFull
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Link_Attr
</UL>

<P><STRONG><a name="[158]"></a>ModifyLinkItem</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ModifyLinkItem &rArr; WriteLinkToTable &rArr; WriteALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkToTable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLink
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Link_Attr
</UL>

<P><STRONG><a name="[159]"></a>ReadLinkItem</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadLinkItem &rArr; ReadLinkFromTable &rArr; ReadALink &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLinkFromTable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLink
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Link_Attr
</UL>

<P><STRONG><a name="[15a]"></a>QueryLinkItem</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QueryLinkItem &rArr; QueryLink
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryAllLinkFromTable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLink
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Link_Attr
</UL>

<P><STRONG><a name="[157]"></a>DelLinkItem</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = DelLinkItem &rArr; DelLinkFromTable &rArr; DelALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkFromTable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLink
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelAllLinkFromTable
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Link_Attr
</UL>

<P><STRONG><a name="[155]"></a>DelLinkForUnit</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, linkwrdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = DelLinkForUnit &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DelLinkForUnit_Attr
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UserDataFormat_Attr
</UL>

<P><STRONG><a name="[190]"></a>DelLinkForPropIDandVal</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, linkwrdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelALink
</UL>

<P><STRONG><a name="[191]"></a>SaveSerialNum</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, msgpackage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysEEPROMData_Set
</UL>

<P><STRONG><a name="[13a]"></a>Msg_Feedback</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, msgpackage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_put
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Package
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>

<P><STRONG><a name="[165]"></a>Msg_UploadUnit</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, msgpackage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = Msg_UploadUnit &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Package
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Upload
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Attr
</UL>

<P><STRONG><a name="[164]"></a>Msg_Upload</STRONG> (Thumb, 58 bytes, Stack size 88 bytes, msgpackage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = Msg_Upload &rArr; Msg_UploadUnit &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UploadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultMsg
</UL>

<P><STRONG><a name="[180]"></a>Msg_Send</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, msgpackage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Package
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sign433_SendTestFrame
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sign433_SendTestReport
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkSrcExe
</UL>

<P><STRONG><a name="[193]"></a>Check_Area</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Check_Area
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scene_Attr
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Attr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Scene_Attr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Group_Attr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[195]"></a>Check_AreaEx</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, object.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BandAddr
</UL>

<P><STRONG><a name="[194]"></a>Check_BandAddr</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Check_BandAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AreaEx
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[138]"></a>Object_Check</STRONG> (Thumb, 726 bytes, Stack size 40 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Object_Check &rArr; GroupEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BandAddr
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Repeat
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Get
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>

<P><STRONG><a name="[6d]"></a>Set_Scene_Attr</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, scene&group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = Set_Scene_Attr &rArr; SceneEEPROMUnit_Init &rArr; SceneEEPROMData_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Clr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMUnit_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>Get_Scene_Attr</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, scene&group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Get_Scene_Attr &rArr; SceneEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Get
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>Set_Group_Attr</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, scene&group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = Set_Group_Attr &rArr; GroupEEPROM_Set &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>Get_Group_Attr</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, scene&group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Get_Group_Attr &rArr; GroupEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitCnt_Get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Area
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>Sign433_SendTestFrame</STRONG> (Thumb, 78 bytes, Stack size 280 bytes, sign433.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Sign433_SendTestFrame &rArr; Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sign433.o(.text)
</UL>
<P><STRONG><a name="[144]"></a>Sign433_SendTestFrameStream</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sign433.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Sign433_SendTestFrameStream &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Sign433_StartSendFrame_Attr
</UL>

<P><STRONG><a name="[4d]"></a>Sign433_SendTestReport</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, sign433.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Sign433_SendTestReport &rArr; Msg_Send &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRSSIPara
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sign433attr.o(.text)
</UL>
<P><STRONG><a name="[198]"></a>SI4432Test_Fail</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, systestattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SI4432Test_Fail &rArr; Upload_Fault &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload_Fault
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessSend_Fun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systestattr.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>SI4432Test_Attr</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, systestattr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SI4432Test_Attr &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Idle
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessSend_Fun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>UserDataDownload_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, userdatadownload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UserDataDownload_Init &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAttr_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Ready
</UL>

<P><STRONG><a name="[8f]"></a>UserDataDownload_Ready</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, userdatadownload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UserDataDownload_Ready &rArr; Program_Erase &rArr; FLASH_ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Erase
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDataDownload_Init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>UserDataFrame_Save</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, userdatadownload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UserDataFrame_Save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>UserDataFrame_Check</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, userdatadownload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UserDataFrame_Check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sysexeattr.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>ALinkClr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ALinkClr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkClr
</UL>

<P><STRONG><a name="[17c]"></a>ALinkInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = ALinkInit &rArr; ALinkClr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALinkClr
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinkInit
</UL>

<P><STRONG><a name="[18c]"></a>ChkALinkIsExist</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ChkALinkIsExist &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkLinkIsExist
</UL>

<P><STRONG><a name="[18e]"></a>GetALinkNum</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetALinkNum
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkNum
</UL>

<P><STRONG><a name="[184]"></a>QueryALink</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, linksimplest.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryLink
</UL>

<P><STRONG><a name="[182]"></a>CheckALinkFull</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, linksimplest.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkFull
</UL>

<P><STRONG><a name="[186]"></a>ReadALink</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ReadALink &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLinkFromTable
</UL>

<P><STRONG><a name="[188]"></a>WriteALink</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = WriteALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLinkToTable
</UL>

<P><STRONG><a name="[18a]"></a>DelALink</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, linksimplest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DelALink &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkForPropIDandVal
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelLinkFromTable
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImmediatelyDormancy
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUP_Play
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnitInstruct
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdataOK
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode_Attr
</UL>

<P><STRONG><a name="[1d2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_CmdUpdata
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_DataEarse
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay
</UL>

<P><STRONG><a name="[1d5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[a8]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1db]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1dc]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1dd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1df]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>

<P><STRONG><a name="[19e]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>

<P><STRONG><a name="[1a2]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>

<P><STRONG><a name="[1e0]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[10c]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Capacity_Check
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Set
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROM_Clr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GroupEEPROMUnit_Init
</UL>

<P><STRONG><a name="[1a3]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1a1]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[1a0]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[1e1]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[1a4]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ae]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[ad]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3a]"></a>Reset_Check</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, devicereset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Reset_Check &rArr; UserEEPROMData_Init &rArr; GroupEEPROM_Init &rArr; GroupEEPROMUnit_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEEPROMData_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_UnitChecking_Attr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceResetCheck_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devicereset.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>Flash_EOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteOptionByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseOptionByte
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[b6]"></a>Flash_Status</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteOptionByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseOptionByte
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[bf]"></a>Delay_nNOP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ACK
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>

<P><STRONG><a name="[be]"></a>I2C_Start</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>

<P><STRONG><a name="[c1]"></a>I2C_Stop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>

<P><STRONG><a name="[c2]"></a>I2C_ACK</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_ACK
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RecvB_Ack
</UL>

<P><STRONG><a name="[c3]"></a>I2C_WaitAck</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendB_Ack
</UL>

<P><STRONG><a name="[c4]"></a>I2C_SendB_Ack</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2C_SendB_Ack &rArr; I2C_WaitAck &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WriteSame
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_GetState
</UL>

<P><STRONG><a name="[c5]"></a>I2C_RecvB_Ack</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C_RecvB_Ack &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ACK
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nNOP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
</UL>

<P><STRONG><a name="[3b]"></a>InstructLED_OFF</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, instruct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InstructLED_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> instruct.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>SPI_RW_Reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_RW_Reg
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Rst
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Idle
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_TX
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Threshold
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_RX
</UL>

<P><STRONG><a name="[d0]"></a>Si4432_PortInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Si4432_PortInit &rArr; GPIOx_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
</UL>

<P><STRONG><a name="[40]"></a>SI4432_SendEn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si4432.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> si4432.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>SetMode_RX</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetMode_RX &rArr; SPI_RW_Reg
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
</UL>

<P><STRONG><a name="[d6]"></a>Si4432_Fault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Si4432_Fault &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecDataToFifo
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Threshold
</UL>

<P><STRONG><a name="[3d]"></a>Si4432_Threshold</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Si4432_Threshold &rArr; Si4432_Fault &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Get
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Fault
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> si4432.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>SetMode_TX</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetMode_TX &rArr; SPI_RW_Reg
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI4432_Send_All_Data
</UL>

<P><STRONG><a name="[dd]"></a>SI4432_Send_All_Data</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SI4432_Send_All_Data &rArr; Si4432_Fault &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Idle
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_TX
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Fault
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_RX
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Send
</UL>

<P><STRONG><a name="[e5]"></a>RecDataToFifo</STRONG> (Thumb, 696 bytes, Stack size 96 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = RecDataToFifo &rArr; ReportUpReady &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_putc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SetSave
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStatus_Get
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sign433_MasterAddr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Upload
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdataOK
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpdating
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportUpReady
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Fault
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMode_RX
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW_Reg
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[ec]"></a>Check_433M_Busy</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, si4432.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Check_433M_Busy &rArr; Thread_Login &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Get
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si4432_Send
</UL>

<P><STRONG><a name="[112]"></a>LED_Set</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LED_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_State
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Gradual
</UL>

<P><STRONG><a name="[41]"></a>LED_Gradual</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED_Gradual &rArr; LED_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pwm.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>LED_State4</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LED_State4 &rArr; Thread_Wake &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pwm.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>LED_State2</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pwm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> pwm.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>Voice_IDProcess</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, voicerecognition.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Voice_IDProcess &rArr; VoicePlayState &rArr; Lark7318_FrameInfo &rArr; cmd_put &rArr; fifo_puts &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSperkers
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlayState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upload
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PropEventFifo
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyUnit_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDownCountReset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lark7318_FrameInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voicerecognition.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>Msg_Level</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cmdprocess.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FIFOData
</UL>

<P><STRONG><a name="[4b]"></a>DataSend_Thread</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DataSend_Thread &rArr; Process_FIFOData &rArr; cmd_get &rArr; fifo_gets &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FIFOData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdprocess.o(.text)
</UL>
<P><STRONG><a name="[139]"></a>Msg_ReturnType</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cmdprocess.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Process
</UL>

<P><STRONG><a name="[137]"></a>Msg_Process</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, cmdprocess.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Msg_Process &rArr; Object_Check &rArr; GroupEEPROM_Get &rArr; ReadDataFromEEPROM &rArr;  Fault_Upload (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Instruct
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Feedback
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Execute
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_ReturnType
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Change
</UL>

<P><STRONG><a name="[13f]"></a>fifo_full</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_putc
</UL>

<P><STRONG><a name="[13e]"></a>fifo_surplusSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_puts
</UL>

<P><STRONG><a name="[15c]"></a>Thread_Check</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Thread_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Wake
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Hang
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Logout
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_Login
</UL>

<P><STRONG><a name="[4e]"></a>FaultMsg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, upload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = FaultMsg &rArr; Msg_Upload &rArr; Msg_UploadUnit &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Upload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> upload.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>Upload_Attr</STRONG> (Thumb, 56 bytes, Stack size 208 bytes, upload.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = Upload_Attr &rArr; Msg_UploadUnit &rArr; Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UploadUnit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ManyUnit_Attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> upload.o(.text)
</UL>
<P><STRONG><a name="[166]"></a>SceneEEPROMData_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SceneEEPROMData_Init &rArr; WriteDataToEEPROMEx &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROMEx
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Init
</UL>

<P><STRONG><a name="[172]"></a>SceneEEPROMData_Clr</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SceneEEPROMData_Clr &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Clr
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMUnit_Init
</UL>

<P><STRONG><a name="[178]"></a>SceneEEPROMSave_Addr</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, userdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Get
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
</UL>

<P><STRONG><a name="[174]"></a>SceneEEPROMData_Save</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SceneEEPROMData_Save &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
</UL>

<P><STRONG><a name="[176]"></a>SceneEEPROMSave_Seat</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, userdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMData_Seat
</UL>

<P><STRONG><a name="[175]"></a>SceneEEPROMData_Seat</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, userdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = SceneEEPROMData_Seat &rArr; WriteDataToEEPROM &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROMSave_Seat
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToEEPROM
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SceneEEPROM_Set
</UL>

<P><STRONG><a name="[192]"></a>Msg_Package</STRONG> (Thumb, 74 bytes, Stack size 272 bytes, msgpackage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = Msg_Package &rArr; Msg_Feedback &rArr; Fault_Upload &rArr; FaultData_Save &rArr;  WriteDataToEEPROM (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Feedback
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Send
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UploadUnit
</UL>

<P><STRONG><a name="[196]"></a>Check_Repeat</STRONG> (Thumb, 186 bytes, Stack size 12 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Check_Repeat
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Object_Check
</UL>

<P><STRONG><a name="[1a5]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[19f]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
